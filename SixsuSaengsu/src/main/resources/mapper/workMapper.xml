<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="co.sixsu.app.work.mapper.WorkMapper">

<select id="getPlan" resultType="DetaProdPlanVO">
	SELECT *
	  FROM PLAN_VIEW
     ORDER BY plan_deta_id
</select>

<select id="getPlanFilter" resultType="DetaProdPlanVO" parameterType="PlanDataVO">
	SELECT *
	  FROM PLAN_VIEW
	 WHERE (cp_name = #{productName} OR #{productName} IS NULL)
  	   AND (plan_deta_id = #{planNo} OR #{planNo} IS NULL)
  	   AND (emp_name = #{writer} OR #{writer} IS NULL)
  	${statusFilter}
     ORDER BY plan_deta_id
</select>

<select id="xxxxx" resultType="DetaProdPlanVO">
	SELECT a.type, 
	       a.PLAN_HEAD_ID, 
	       b.MAT_ID, 
	       c.CP_name, 
	       b.deta_qt, 
	       b.good_qt,
	       a.plan_due_date, 
	       TO_char(b.START_DATE, 'yyyy-MM-dd') AS start_date, 
	       TO_char(b.END_DATE, 'yyyy-MM-dd') AS end_date, 
	       b.MEMO
	       
	  FROM PROD_PLAN a 
	  left JOIN DETA_PROD_PLAN b ON a.PLAN_HEAD_ID = b.PLAN_HEAD_ID
      left JOIN COMPLETE_PROD c ON b.MAT_ID = c.CP_ID
      
    ORDER BY a.plan_deta_id
</select>

<select id="getSorder" resultType="SorderVO">
	SELECT a.ORD_ID, 
	       a.BUS_ID, c.BUS_NAME, TO_char(b.ORD_END_DATE, 'yyyy-MM-dd') AS ORD_END_DATE, 
	       TO_char(a.ORD_DATE, 'yyyy-MM-dd') AS ORD_DATE ,
	       a.ORD_STAT
	  FROM SORDER a 
	  LEFT JOIN DET_ORD b ON a.ORD_ID = b.ORD_ID
      LEFT JOIN BUSINESS C ON a.BUS_ID = c.BUS_ID
</select>

<select id="getdetOrd" resultType="detOrdVO">
	SELECT a.ORD_DET_ID, a.CP_ID, b.CP_NAME, a.ord_QT, TO_char(a.ORD_END_DATE, 'yyyy-MM-dd') AS ORD_END_DATE, a.ORD_STAT_DET
	FROM DET_ORD a LEFT JOIN COMPLETE_PROD b ON a.CP_ID = b.CP_ID
	WHERE ORD_ID = #{ordId}
</select>

<select id="getIdDateAndData" resultType="string">
	SELECT (#{data} || TO_NUMBER(NVL(MAX(SUBSTR(PLAN_HEAD_ID, 10)), 0) + 1))
	FROM PROD_PLAN
	WHERE PLAN_HEAD_ID LIKE '${data}%'
</select>

<insert id="addProdPlan" parameterType="addPlanVO">
	INSERT INTO PROD_PLAN (PLAN_HEAD_ID, 
	                       TYPE, 
	                       PLAN_REG_DATE, 
	                       EMP_ID,
	                       PLAN_START,
	                       PLAN_END)
	values ( #{planHeadId}, 
	         #{type}, 
	         #{regDate}, 
	         #{empName}, 
	         TO_DATE(#{startDate},'yyyy-MM-dd'), 
	         TO_DATE(#{endDate},'yyyy-MM-dd'))
</insert>

<insert id="addDetProdPlan" parameterType="addPlanVO">
	INSERT INTO DETA_PROD_PLAN (PLAN_DETA_ID, ORD_DET_ID, PLAN_HEAD_ID, MAT_ID, DETA_QT, CMPLT_ST, MEMO)
	values ( #{planDetaId}, #{ordDetId}, #{planHeadId}, #{cpId}, #{ordQt}, #{cmpltSt}, #{memo})
</insert>

<select id="getProductList" resultType="ProductVO">
	SELECT *
	FROM COMPLETE_PROD
</select>

<select id="getPlanList" resultType="addPlanVO">
	SELECT PLAN_HEAD_ID, TYPE, TO_char(PLAN_START, 'yyyy-MM-dd') AS PLAN_START,  TO_char(PLAN_END, 'yyyy-MM-dd') AS PLAN_END, PLAN_COMPLETION_STATUS AS cmplt_st
	FROM PROD_PLAN
</select>

<select id="getDetaPlanList" resultType="addPlanVO">
with work as (
 SELECT DISTINCT 
        a.PLAN_DETA_ID, 
        SUM(b.DETA_QT) AS SUM_QT
   FROM plan_and_worklink a 
   LEFT OUTER JOIN DETA_WORK_ORDR b 
     ON a.WK_DETA_ID = b.WK_DETA_ID
  GROUP BY a.PLAN_DETA_ID	
)
	SELECT a.PLAN_DETA_ID, 
	       a.MAT_ID AS CP_ID, 
	       c.CP_NAME, 
	       a.DETA_QT, 
	       b.SUM_QT, 
	       a.CMPLT_ST
	 
	  FROM DETA_PROD_PLAN a  
	  LEFT OUTER JOIN work b 
	    ON a.PLAN_DETA_ID = b.PLAN_DETA_ID
	  LEFT OUTER JOIN COMPLETE_PROD c 
	    ON a.MAT_ID = c.CP_ID
	  
    WHERE a.PLAN_HEAD_ID = #{planHeadId}
	ORDER BY a.PLAN_DETA_ID
</select>

<select id="getProcessList" resultType="ProcessVO">
	SELECT *
	  FROM PROCESS
</select>

<select id="getMaterialList" resultType="MatVO">
	SELECT MAT_ID, MAT_NAME, MAT_SIZE, MAT_UNIT, MAT_STAT,'자재' AS TYPE
		FROM MATERIAL
		
		UNION ALL
		
	SELECT SP_ID,SP_NAME,SP_SIZE,SP_UNIT,SP_stat,'반제품' AS TYPE
		FROM SEMI_PROD
</select>

<select id="getOrderCode" resultType="String">
	SELECT (to_CHAR((SYSTIMESTAMP AT TIME ZONE 'Asia/Seoul'), 'yyyyMMdd')||'-'|| (NVL(MAX(TO_NUMBER(SUBSTR(WK_HEAD_ID, 10))), 0) + 1))
		FROM WORK_ORDR
		WHERE WK_HEAD_ID LIKE to_CHAR((SYSTIMESTAMP AT TIME ZONE 'Asia/Seoul'), 'yyyyMMdd')||'-%'
</select>

<insert id="addWork">
	INSERT 
		INTO WORK_ORDR (WK_HEAD_ID, WK_CMPLT_ST) 
		values (#{orderCode},'작성중')
</insert>

<select id="getDetaCode" resultType="String">
	SELECT #{subData} || '-' ||(NVL(MAX(TO_NUMBER(SUBSTR(WK_DETA_ID, LENGTH(#{subData})+2))), 0) + 1)
		FROM DETA_WORK_ORDR
		WHERE WK_DETA_ID like '${subData}%'
</select>

<insert id="addDetaWork" parameterType="DetaWorkOrdrVO">
	INSERT 
		INTO DETA_WORK_ORDR (WK_HEAD_ID,WK_DETA_ID, CMPLT_ST) 
		values(#{wkHeadId},#{wkDetaId},'작성중')
</insert>
<insert id="addWkBom">
	INSERT 
		INTO WORK_BOM (WK_BOM_ID, WK_DETA_ID, TYPE) 
		values('WKB'||wk_BOM_SEQ.nextVal, #{detaCode}, 
			   '작성중')
</insert>
	
<select id="getDetaWorkHeadList" resultType="DetaWorkOrdrVO">
	SELECT *
		FROM DETA_WORK_ORDR a LEFT OUTER JOIN (SELECT CP_ID, CP_NAME
		FROM complete_prod
		
		UNION ALL
		
	SELECT SP_ID AS CP_ID,SP_NAME AS CP_ID
		FROM SEMI_PROD) b 
			ON a.cp_ID = b.CP_ID
	       LEFT OUTER JOIN employee c 
	        ON a.emp_ID = c.emp_id
			 WHERE WK_HEAD_ID = #{data}
			 ORDER BY a.WK_DETA_ID
</select>	

<select id="getWkBomList" resultType="workBomVO">
	SELECT *
		FROM WORK_BOM a 
			LEFT OUTER JOIN PROCESS b 
			 ON a.PROC_ID = b.PROC_ID
			 
			LEFT OUTER JOIN COMMON_CODE c 
			 ON b.PROC_TYPE = c.COM_id
			 
			  WHERE a.WK_DETA_ID = #{data}
			  ORDER BY WK_BOM_ID
</select>

<select id="getBomCode" resultType="String">
	SELECT MAX(WK_BOM_ID)
		FROM WORK_BOM
		WHERE WK_DETA_ID = #{detaCode}
</select>
<insert id="addWorkMatBom">
	INSERT 
		INTO WORK_BOM_MAT (BOM_MAT_ID, 
						   WK_BOM_ID, 
						   TYPE)
						   
		values('workMat'||work_mat_seq.nextVal, 
		 	   #{bomCode}, 
			   '작성중')
</insert>

<select id="getWkMatList" resultType="bomMatVO">
	SELECT *
	FROM WORK_BOM_MAT a LEFT OUTER JOIN (SELECT MAT_ID, MAT_NAME, MAT_SIZE, MAT_UNIT, MAT_STAT,'자재' AS TYPE
	FROM MATERIAL
	UNION ALL
	SELECT SP_ID,SP_NAME,SP_SIZE,SP_UNIT,SP_stat,'반제품' AS TYPE
	FROM SEMI_PROD) b
    ON a.MAT_ID = b.MAT_ID
    WHERE a.WK_BOM_ID = #{data} 
    ORDER BY a.BOM_MAT_ID
</select>

<delete id="delBomList" parameterType="List">
	DELETE WORK_BOM
	WHERE WK_BOM_ID IN
	<foreach collection="data" item="item" open="(" separator="," close=")">
		#{item.wkBomId}
	</foreach>
</delete>

<delete id="delMatList" parameterType="List">
	DELETE WORK_BOM_MAT
	WHERE BOM_MAT_ID IN
	<foreach collection="data" item="item" open="(" separator="," close=")">
		#{item.bomMatId}
	</foreach>
</delete>

<delete id="delBeideMat" parameterType="List">
	DELETE WORK_BOM_MAT
	WHERE WK_BOM_ID IN
	<foreach collection="data" item="item" open="(" separator="," close=")">
		#{item.wkBomId}
	</foreach>
</delete>

<delete id="delDetWorkList" parameterType="List">
	DELETE DETA_WORK_ORDR
	WHERE WK_DETA_ID IN
	<foreach collection="data" item="item" open="(" separator="," close=")">
		#{item.wkDetaId}
	</foreach>
</delete>

<delete id="delBeideBom" parameterType="List">
	DELETE WORK_BOM
	WHERE WK_DETA_ID IN
	<foreach collection="data" item="item" open="(" separator="," close=")">
		#{item.wkDetaId}
	</foreach>
</delete>

<update id="modifyMatList" parameterType="bomMatVO">
	UPDATE WORK_BOM_MAT SET MAT_ID = #{matId} , CP_QT = #{cpQt}
	WHERE BOM_MAT_ID = #{bomMatId}
</update>

<update id="modifyBomList" parameterType="workBomVO">
	UPDATE WORK_BOM SET PROC_ID = #{procId}
	WHERE WK_BOM_ID = #{wkBomId}
</update>

<update id="modifyDetaWorkList" parameterType="DetaWorkOrdrVO">
	UPDATE DETA_work_ordr SET CP_ID = #{cpId}, START_DATE = #{startDate},
    END_DATE = #{endDate}, DETA_QT = #{detaQt}, EMP_ID = #{empId}
	WHERE WK_DETA_ID = #{wkDetaId}
</update>


<resultMap id="outResultMap" type="java.util.HashMap">
  <result property="outParam" jdbcType="VARCHAR" column="outParam" />
</resultMap>

<select id="workInsertSubmit" statementType="CALLABLE" resultMap="outResultMap">
  { CALL WORK_DETA_INSERT(
    #{data, mode=IN, jdbcType=VARCHAR},
    #{outParam, mode=OUT, jdbcType=VARCHAR}
  ) }
</select>
 
<insert id="teset" parameterType="String">
	<![CDATA[
	call WORK_DETA_INSERT(
		#{data, mode=IN, jdbcType=VARCHAR},
		#{out, mode=OUT, jdbcType=VARCHAR}
	)
	]]>
</insert>

<select id="workDataDelete" statementType="CALLABLE" resultMap="outResultMap">
  { CALL WORK_DETA_DELETE (
  	#{inParam},
  	#{outParam, mode=OUT, jdbcType=VARCHAR}
  )}
</select>

<select id="getProductBomList" parameterType="DetaWorkOrdrVO">
	<![CDATA[
	{ CALL add_work_bom_mat(
		#{wkDetaId},
		#{cpId}
	)}
	]]>
</select>

<select id="startWorkOrder" statementType="CALLABLE" resultMap="outResultMap">
  { CALL START_WORK_ORDER(
    #{headCode, mode=IN, jdbcType=VARCHAR},
    #{detaCode, mode=IN, jdbcType=VARCHAR},
    #{resultParam, mode=OUT, jdbcType=VARCHAR}
  )}
</select>

<select id="endWorkOrder" statementType="CALLABLE" resultMap="outResultMap">
	{ CALL END_WORK_ORDER(
     #{detaCode, mode=IN, jdbcType=VARCHAR},
     #{resultParam, mode=OUT, jdbcType=VARCHAR}
   )}
</select>




<!-- ======================================================== -->
<select id="getWorkList" resultType="DetaWorkOrdrVO">
	SELECT *              
	FROM DETA_WORK_ORDR a LEFT OUTER JOIN (SELECT CP_ID AS CP_ID, CP_NAME AS CP_NAME, CP_SIZE, CP_UNIT, CP_STAT,'자재' AS TYPE
	FROM COMPLETE_PROD
	UNION ALL
	SELECT SP_ID,SP_NAME,SP_SIZE,SP_UNIT,SP_stat,'반제품' AS TYPE
	FROM SEMI_PROD) b ON a.CP_ID = b.CP_ID
        LEFT OUTER JOIN employee c ON a.EMP_ID = c.EMP_ID
    WHERE CMPLT_ST != '작성중'
    AND SUBSTR(a.WK_HEAD_ID, 0,8) >= TO_CHAR((SYSTIMESTAMP AT TIME ZONE 'Asia/Seoul'), 'yyyyMMdd') OR a.WK_DETA_ID IN (SELECT WK_DETA_ID FROM DETA_WORK_ORDR WHERE START_DATE >= TRUNC((SYSTIMESTAMP AT TIME ZONE 'Asia/Seoul')))
    ORDER BY WK_HEAD_ID
</select>

<select id="getWorkListForProcess" resultType="DetaWorkOrdrVO">
	SELECT *              
	FROM DETA_WORK_ORDR a LEFT OUTER JOIN (SELECT CP_ID AS CP_ID, CP_NAME AS CP_NAME, CP_SIZE, CP_UNIT, CP_STAT,'자재' AS TYPE
	FROM COMPLETE_PROD
	UNION ALL
	SELECT SP_ID,SP_NAME,SP_SIZE,SP_UNIT,SP_stat,'반제품' AS TYPE
	FROM SEMI_PROD) b ON a.CP_ID = b.CP_ID
        LEFT OUTER JOIN employee c ON a.EMP_ID = c.EMP_ID
    WHERE CMPLT_ST != '작성중'
    AND SUBSTR(a.WK_HEAD_ID, 0,8) >= TO_CHAR((SYSTIMESTAMP AT TIME ZONE 'Asia/Seoul'), 'yyyyMMdd') OR a.WK_DETA_ID IN (SELECT WK_DETA_ID FROM DETA_WORK_ORDR WHERE START_DATE >= TRUNC((SYSTIMESTAMP AT TIME ZONE 'Asia/Seoul')))
    OR a.END_DATE > TRUNC(SYSTIMESTAMP AT TIME ZONE 'Asia/Seoul')
    OR CMPLT_ST = '진행중'
    ORDER BY WK_HEAD_ID
</select>

<select id="workFilterAjax" parameterType="WorkFilterDataVO" resultType="DetaWorkOrdrVO">
	SELECT *              
	FROM DETA_WORK_ORDR a LEFT OUTER JOIN (SELECT CP_ID AS CP_ID, CP_NAME AS CP_NAME, CP_SIZE, CP_UNIT, CP_STAT,'자재' AS TYPE
	FROM COMPLETE_PROD
	UNION ALL
	SELECT SP_ID,SP_NAME,SP_SIZE,SP_UNIT,SP_stat,'반제품' AS TYPE
	FROM SEMI_PROD) b ON a.CP_ID = b.CP_ID
        LEFT OUTER JOIN employee c ON a.EMP_ID = c.EMP_ID
        
    WHERE (b.CP_NAME = #{productName} OR #{productName} IS NULL)
  	AND (a.WK_HEAD_ID = #{workNo} OR #{workNo} IS NULL)
  	AND (c.emp_name = #{writer} OR #{writer} IS NULL)
  	${statusFilter}
  	<if test="workFrom != ''">
  		AND a.START_DATE BETWEEN TO_DATE(#{workFrom}, 'yyyy-MM-dd') AND TO_DATE(#{workTo}, 'yyyy-MM-dd')
  	</if>
  	<if test="makeFrom != ''">
  		AND TO_DATE(SUBSTR(a.WK_HEAD_ID,1,8),'yyyyMMdd') BETWEEN TO_DATE(#{makeFrom}, 'yyyy-MM-dd') AND TO_DATE(#{makeTo}, 'yyyy-MM-dd')
  	</if>
    ORDER BY WK_HEAD_ID DESC
    
</select>








</mapper>