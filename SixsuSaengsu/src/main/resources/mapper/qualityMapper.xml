<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="co.sixsu.app.quality.mapper.QualityMapper">

	<!-- 장가애 -->
	
	<!-- 검색용 -->
	<sql id="criteria">
		<where>
			<if test="inspType != null and inspType != ''.toString()">
				insp_type = #{inspType}
			</if>
			<if test="inspNum != null and inspNum != ''.toString()">
				and ( insp_num like '%'||#{inspNum}||'%' )
			</if>
			<if test="inspItemId != null and inspItemId != ''.toString()">
				and ( insp_item_id = #{inspItemId} )
			</if>
			<if test="inspDate != null and inspDate != ''.toString() and inspDate2 != null and inspDate2 != ''.toString()">
				and ( insp_date between to_date(#{inspDate}, 'YYYY-MM-DD') and
								to_date(#{inspDate2}|| ' 23:59:59', 'YYYY-MM-DD HH24:MI:SS') )
			</if>
			<if test="empId != null and empId != ''.toString()">
				and ( emp_id = #{empId} )
			</if>
		</where>
	</sql>
		
	<select id="searchInsp" resultType="QuaVO">
		select q.insp_num, q.insp_item_id, to_char(insp_date, 'yyyy-MM-dd') insp_date, insp_qt, suit_qt, nsuit_qt ,q.insp_std_id, get_emp_name(emp_id) emp_name, get_com_name(insp_type) insp_exp, NVL(NVL(c.cp_name, s.sp_name), m.mat_name) mat_name
		from qua_com q
		left outer join complete_prod c on q.insp_item_id = c.cp_id
		left outer join semi_prod s on q.insp_item_id = s.sp_id
		left outer join material m on q.insp_item_id = m.mat_id  
      <include refid="criteria"></include>
      	order by insp_num desc
	</select>
	
	<select id="resultInspList" resultType="QuaVO">
		select q.insp_num, q.insp_item_id, to_char(insp_date, 'yyyy/MM/dd') insp_date, insp_qt, suit_qt, nsuit_qt ,q.insp_std_id, get_emp_name(emp_id) emp_name, get_com_name(insp_type) insp_exp, NVL(NVL(c.cp_name, s.sp_name), m.mat_name) mat_name
		from qua_com q
		left outer join complete_prod c on q.insp_item_id = c.cp_id
		left outer join semi_prod s on q.insp_item_id = s.sp_id
		left outer join material m on q.insp_item_id = m.mat_id  
		where insp_date between TRUNC(sysdate) - (INTERVAL '14' DAY) and sysdate
		order by insp_num desc
	</select>

	<!-- 원천수 자재 리스트 출력 -->
	<select id="getWater" resultType="QuaVO">
		select prcs_pfmc_id insp_std_id, pd_id insp_item_id, pd_name mat_name, good_qt insp_qt, wk_end insp_date
		from PROCESS_PERFORMANCE
		left outer join qua_com on insp_item_id = pd_id
		where pd_id = 'M021'
		and insp_num IS NULL
	</select>
	
	<!-- 검사 상세 조회 -->
	<select id="getDetail" resultType="QuaVO">
		SELECT D.DET_INSP_NUM,
				D.INSP_NUM,
				D.INSP_ID,
				D.RES_VAL,
				GET_COM_CODE(D.RES_STAT) RES_STAT,
				D.DETAIL_NOTE, 
				L.INSP_NAME, 
				STD_VAL
		FROM QUA_DETAILS D
		JOIN QUA_INSP_LIST L ON D.INSP_ID = L.INSP_ID
		WHERE INSP_NUM = #{inspNum}
		order by det_insp_num
	</select>
	
	<!-- 조민경 -->

	<!-- 자재 입고 검사 등록 리스트 -->
	<select id="proRecList" resultType="QuaVO">
		select r.mat_req_id,
		       b.bus_name, 
		       r.mat_id, 
		       m.mat_name, 
		       r.mat_req_qt,
		       r.mat_req_qt insp_qt
		       
		  from mat_req r 
		  left join	material m
		    on r.mat_id = m.mat_id
		  left join business b
		    on r.bus_id = b.bus_id
		    
		 where r.mat_req_stat='A'
		   and mat_req_qt>0
		   
		order by TO_NUMBER(SUBSTR(mat_req_id, INSTR(mat_req_id, '-') + 1))
	</select>


	<!-- 자재 입고 검사 대기 리스트 -->
	<select id="prInspList" resultType="QuaVO">
		 select
		        q.insp_std_id,
		        q.insp_num,
				b.bus_name, 
				r.mat_id, 
				m.mat_name,
				r.mat_req_qt, 
				q.insp_qt
				
		   from qua_com q 
		   join mat_req r 
		     on	q.insp_std_id = r.mat_req_id
		   join material m
		     on r.mat_id = m.mat_id
		   left join business b
		     on r.bus_id = b.bus_id
		     
		   where r.mat_req_stat='B'
		   
		order by TO_NUMBER(SUBSTR(mat_req_id, INSTR(mat_req_id, '-') + 1))
	</select>


	<!-- 입고 검사 등록 프로시저 -->
	<select id="insertPro" statementType="CALLABLE"
		parameterType="QuaVO">
		{CALL insert_pro(
			#{matReqId},
			<!-- #{inspQt, mode=IN, jdbcType=VARCHAR}, -->
			#{result, mode=INOUT, jdbcType=VARCHAR,	javaType=String}
		)}	
	</select>

	<!-- 검사 항목 리스트 -->
	<select id="inspItem" resultType="QuaVO">
		select insp_id, insp_sep, insp_name, insp_exp, std_val, insp_note
     	from qua_insp_list
     	where insp_item_id like '%'||#{inspItemId}||'%'
	</select>

	<!-- 수정 버튼 클릭 시 검사 항목 불러오기 -->
	<select id="modInspItem" resultType="QuaVO">
		select d.insp_num,
			   d.det_insp_num,
		       d.insp_id, 
		       d.res_val, 
		       l.insp_name, 
		       l.insp_exp, 
		       l.std_val,
		       q.insp_qt,
		       q.suit_qt, 
		       d.res_stat,
		       d.res_val nsuit_qt
		  
		  from qua_details d
		  join qua_com q 
		    on d.insp_num = q.insp_num
left outer join qua_insp_list l 
		    on d.insp_id = l.insp_id
		
		where d.insp_num = #{inspNum}
		
	</select>

	<!-- 입고 검사 상세 결과 등록 -->
	<insert id="insertQuaDet" parameterType="QuaVO"> 
		insert into
		qua_details(det_insp_num,
		            insp_num, 
		            insp_id, 
		            res_val, 
		            res_stat) 
		     values(#{detInspNum}, 
		            #{inspNum},
		            #{inspId}, 
		            #{nsuitQt}, 
		            #{resStat})
	</insert>

	<!-- 입고 검사 상세 결과 수정 -->
	<update id="updateQd" parameterType="QudVO">
		update qua_details set
		       res_val = #{nsuitQt}
		 where det_insp_num = #{detInspNum}
	</update>
	
	<!-- 입고 검사 공통 결과 수정 -->
	<update id="updateQc" parameterType="QuaVO">
		update qua_com 
		   set
			    suit_qt    = (#{inspQt}-#{totNsuitQt}),
				nsuit_qt   = #{totNsuitQt},
				insp_date  = sysdate,
				emp_id     = #{empId},
				insp_type	  = 'INSP-A'
				
		where
			    insp_num   = #{inspNum}
			
	</update>



	<!-- 검사 결과 등록 시 검사 공통 업데이트 -->
	<update id="qComUpdate" parameterType="QuaVO">
		update   qua_com
		   set
				insp_num      = #{inspNum},
				insp_item_id  = #{inspItemId},
				insp_qt       = #{inspQt},
				insp_date     = sysdate,
				emp_id        = #{empId},
				suit_qt       = (#{inspQt}-#{totNsuitQt}),
				nsuit_qt      = #{totNsuitQt},
				insp_type	  = 'INSP-A'
		where
		        insp_num=#{inspNum}
		 <!--  and   insp_item_id LIKE '%'||#{insp_item_id}||'%' -->


	</update>

	<!-- 입고 검사 결과 등록 시 자재 발주 업데이트 -->
	<update id="mUpdate" parameterType="QuaVO">
		 update mat_req 
		 set
		     mat_req_stat=#{matReqStat}
   	   where
		     mat_req_id=#{inspStdId}
	</update>


	<!-- 입고 검사 완료 리스트 -->
	<select id="afterReqList" resultType="QuaVO">
		SELECT q.insp_num,
			   q.insp_std_id, 
			   m.mat_name,
			   r.mat_id, 
			   q.insp_qt, 
			   q.nsuit_qt, 
			   get_emp_name(e.emp_id) emp_name,
			   b.bus_name,
			   TO_CHAR(q.insp_date, 'YYYY-MM-DD') AS insp_date
		  FROM qua_com q
		  JOIN mat_req r 
		    ON q.insp_std_id = r.mat_req_id
	LEFT JOIN employee e
		    ON
		       q.emp_id = e.emp_id
	      JOIN material m 
	        ON r.mat_id = m.mat_id
	 LEFT JOIN business b
		    on r.bus_id = b.bus_id
		
		 WHERE r.mat_req_stat='C'
		 OR r.mat_req_stat='D'
		 AND TRUNC(q.insp_date) >= TRUNC(SYSDATE) - 14
<!-- 		 <if test="inspDate == null">
  		 AND TRUNC(q.insp_date) >= TRUNC(SYSDATE) - 14
		 </if>
		 <if test="inspDate != null">
		  AND TRUNC(q.insp_date) = to_date(#{inspDate},'yyyy-MM-dd')
		 </if>
		 <if test="matId != null">
		  AND matId = #{matId}		 
		 </if>
		 <if test="empId != null">
		  AND empId = #{empId}
		 </if> -->
		 
		 order by q.insp_date desc

	</select>

	<!-- 입고 검사 완료 단건 삭제 -->
	<delete id="delInsp" parameterType="QuaVO">
		delete from qua_com where
		insp_num = #{inspNum}
	</delete>

	<!-- 공정 검사 등록 리스트 -->
	<select id="bpAddList" resultType="PrdInspVO">
		 select  p.prcs_pfmc_id, 
		         p.wk_deta_id, 
		         p.pd_id, 
		         p.pd_name, 
		         p.deta_qt,
		         p.dmat_qt,
		         p.good_qt,
		         p.wk_end, 
		         q.insp_num,
		         b.proc_id,
		         r.proc_name
		   from  process_performance p 
LEFT OUTER JOIN  qua_com q 
             ON  p.PRCS_PFMC_ID = q.INSP_STD_ID
LEFT 	JOIN  work_bom b
		     ON  p.wk_bom_id = b.wk_bom_id
	  LEFT JOIN  process r
	         ON  b.proc_id = r.proc_id
          WHERE  q.INSP_NUM IS NULL
            AND  p.deta_qt>0
       ORDER BY  p.prcs_pfmc_id
	</select>

	<!-- 공정검사 전 검사 번호 자동 등록 -->
	<select id="pdInspNum" resultType="String">
		select get_qpd_num from dual
	</select>

	<!-- 공정 검사 (대기) 등록 -->
 	<insert id="bpdAdd" parameterType="PrdInspVO">
		insert into qua_com
		(insp_num,
		insp_item_id, insp_type, insp_qt, suit_qt, nsuit_qt, insp_std_id)
		values
		(#{inspNum},
		#{pdId}, 'INSP-B', #{detaQt}, #{goodQt}, #{dmatQt}, #{prcsPfmcId})
	</insert> 
	
	<!-- <insert id="bpdAdd" parameterType="PrdInspVO">
	  INSERT INTO qua_com
	  (insp_num, insp_item_id, insp_type, insp_qt, insp_std_id)
	  SELECT #{inspNum}, #{pdId}, 'INSP-B', #{detaQt}, p.PRCS_PFMC_ID
	  FROM process_performance p
	  LEFT OUTER JOIN work_bom b ON p.wk_deta_id = b.wk_deta_id
	  LEFT OUTER JOIN process r ON b.proc_id = r.proc_id
	  WHERE r.proc_id = #{procId} AND p.pd_name = #{productName}
</insert> -->

	<!-- 공정 검사 대기 리스트 -->
	<select id="prwList" resultType="PrdInspVO">
		 select  p.prcs_pfmc_id, 
		         p.wk_deta_id, 
		         p.pd_id, 
		         p.pd_name, 
		         p.deta_qt, 
		         p.good_qt,
		         p.dmat_qt,
		         to_char(p.wk_end, 'yyyy-MM-dd') wk_end, 
		         q.insp_num,
		         q.insp_date,
		         b.proc_id,
		         r.proc_name
		   from  process_performance p 
LEFT OUTER JOIN  qua_com q 
             ON  p.PRCS_PFMC_ID = q.INSP_STD_ID
LEFT OUTER JOIN  work_bom b
		     ON  p.wk_bom_id = b.wk_bom_id
	  LEFT JOIN  process r
	         ON  b.proc_id = r.proc_id
          WHERE  q.INSP_NUM IS NOT NULL
            AND  q.INSP_DATE IS NULL
       ORDER BY  p.wk_end
	</select>
	
	<!-- 공정 검사 결과 등록 -->
	<update id="prdComUpdate" parameterType="PrdInspVO">
		update   qua_com
		   set
				 insp_num      = #{inspNum},
				 insp_item_id  = #{pdId},
				 insp_qt       = #{detaQt},
				 insp_date     = sysdate,
				 emp_id        = #{empId},
				 suit_qt       = #{goodQt},
				 nsuit_qt      = #{dmatQt},
				 insp_type	  = 'INSP-B'
		where
		        insp_num=#{inspNum}
	</update>
	
	<!-- 공정 검사 완료 리스트 -->
		<select id="prdComList" resultType="PrdInspVO">
		 select  p.prcs_pfmc_id, 
		         p.wk_deta_id, 
		         p.pd_id, 
		         p.pd_name, 
		         p.deta_qt, 
		         p.good_qt,
		         p.dmat_qt,
		         q.insp_num,
		         to_char(q.insp_date, 'yyyy-MM-dd') insp_date,
		         b.proc_id,
		         r.proc_name,
                 get_emp_name(q.emp_id) emp_id
		   from  process_performance p 
LEFT OUTER JOIN  qua_com q 
             ON  p.PRCS_PFMC_ID = q.INSP_STD_ID
LEFT OUTER JOIN  work_bom b
		     ON  p.wk_bom_id = b.wk_bom_id
	  LEFT JOIN  process r
	         ON  b.proc_id = r.proc_id
          WHERE  q.INSP_NUM IS NOT NULL
            AND  q.INSP_DATE IS NOT NULL
            AND TRUNC(q.insp_date) >= TRUNC(SYSDATE) - 14
       ORDER BY  q.insp_date desc
	</select>
	
	
	<!-- 출고 검사 번호 자동 등록 -->
  	<select id="psInspNum" resultType="String">
		select get_qps_num from dual
	</select> 
	
	<!-- 출고 검사 결과 등록 시 검사 공통 등록 -->
  	<insert id="insertShipCom" parameterType="ShipInspVO">
		INSERT INTO qua_com (insp_num, insp_std_id, insp_item_id, insp_type, insp_date, emp_id, insp_qt, nsuit_qt, suit_qt, qua_com_note) 
    	values (#{inspNum}, #{cpShipId}, #{cpId}, 'INSP-C', sysdate, #{empId},#{cpShipQt},  #{nsuitQt}, #{suitQt}, #{quaComNote})
	</insert>  
	
	<!-- 출고 검사 결과 등록시 검사 세부 등록 -->
  	<insert id="insertShipDet" parameterType="ShipInspVO">
		INSERT INTO qua_details (det_insp_num, insp_num, insp_id, res_val, res_stat)
		values (#{detInspNum}, #{inspNum}, #{inspId}, #{resVal}, #{resStat})
	</insert>  
	
	<!-- 출고 검사 결과 등록시 update -->
 	 <update id="updateShip" parameterType="ShipInspVO">
		 update pro_ship
		    set 
		        cp_ship_stat=#{cpShipStat},
		        insp_num=#{inspNum}
	      where cp_ship_id=#{cpShipId}
	</update>  

	<!-- 완제품 출고 관리 리스트 -->
  	<select id="shInspList" resultType="ShipInspVO">
        select s.cp_ship_id, 
			   s.ord_det_id, 
			   s.cp_lot_id, 
			   c.cp_name,
			   p.cp_id, 
			   s.cp_ship_qt, 
			   get_com_code(s.cp_ship_stat) cp_ship_stat,
			   d.res_stat,
			   to_char(q.insp_date, 'yyyy-MM-dd') insp_date, 
			   q.insp_num, 
			   to_char(f.wk_end,'yyyy-MM-dd') wk_end ,
			   to_char(f.wk_end + (INTERVAL '2' YEAR), 'yyyy-MM-dd') as exp_date,
			   get_emp_name(q.emp_id) emp_name
		from
				pro_ship s left join qua_com q
				on s.cp_ship_id = q.insp_std_id
				left join prod_lot p
				on s.cp_lot_id = p.cp_lot_id
				left join complete_prod c
				on p.cp_id=c.cp_id
        		left join qua_details d
        		on q.insp_num = d.insp_num
LEFT OUTER JOIN prod_rev r 
             ON p.cp_lot_id = r.cp_lot_id
LEFT OUTER JOIN process_performance f 
             ON r.prcs_pfmc_id = f.prcs_pfmc_id
		order by cp_ship_stat, insp_date desc
	</select>
	
	<!-- 완제품 출고 관리 리스트 -->
<!-- 		<select id="shInspList" resultType="ShipInspVO">
			SELECT s.*, p.cp_name, q.suit_qt, q.insp_date, f.wk_end, f.wk_end + (INTERVAL '2' YEAR) as exp_date,
				   q.insp_num
			FROM pro_ship s
		    LEFT OUTER JOIN prod_lot l ON s.cp_lot_id = l.cp_lot_id
	        JOIN complete_prod p ON l.cp_id = p.cp_id
			LEFT OUTER JOIN qua_com q on l.cp_id = q.insp_item_id
			LEFT OUTER JOIN prod_rev r ON l.cp_lot_id = r.cp_lot_id
			LEFT OUTER JOIN process_performance f ON r.prcs_pfmc_id = f.prcs_pfmc_id
		</select> -->
	
	<!-- 완제품 출고, 반품 수정 공통 -->
	<update id="modShipCom" parameterType="ShipInspVO">
		update qua_com
		  set  suit_qt       = #{suitQt},
			   nsuit_qt      =  #{nsuitQt}
				insp_date  = sysdate,
				emp_id     = #{empId},
				insp_type  = 'INSP-C',
			qua_com_note   = #{quaComNote}
		 where
		        insp_num      = #{inspNum}
 
	</update>
	
	<!-- 완제품 출고, 반품 수정 상세 -->
	<update id="modShipDet" parameterType="ShipInspVO">
		update qua_details
		   set	res_val       = #{cpShipQt},
		   	    res_stat      = #{resStat}
		 where
		        insp_num      = #{inspNum}
 
	</update>
	
	<!-- 반품 리스트 -->
	<!-- <select id="returnList" resultType="ReturnInspVO">
		 SELECT r.ret_id, 
		        l.cp_lot_id,
		        d.res_stat, 
		        q.insp_date, 
		        f.wk_end, 
		        f.wk_end + (INTERVAL '2' YEAR) AS "exp_date"
		   FROM ret_prod r
LEFT OUTER JOIN pro_ship s 
			 ON r.cp_ship_id = s.cp_ship_id
LEFT OUTER JOIN prod_lot l 
			 ON s.cp_ship_id = l.cp_lot_id
		   JOIN complete_prod p 
		     ON l.cp_id = p.cp_id
LEFT OUTER JOIN qua_com q 
			 ON l.cp_id = q.insp_item_id
		   JOIN qua_details d 
		     ON q.insp_num = d.insp_num
LEFT OUTER JOIN prod_rev v 
			 ON l.cp_lot_id = v.cp_lot_id
LEFT OUTER JOIN process_performance f 
			 ON v.prcs_pfmc_id = f.prcs_pfmc_id 
	</select> -->
	
	<!-- 반품 리스트 가조회 -->
	
	<select id="returnList" resultType="ReturnInspVO">
		select ret_id,
			   cp_lot_id,
			   cp_id,
			   cp_name,
			   to_char(wk_end, 'yyyy-MM-dd') wk_end,
			   to_char(exp_date, 'yyyy-MM-dd') exp_date,
			   ret_qt,
			   to_char(insp_date, 'yyyy-MM-dd') ret_date,
			   to_char(insp_date, 'yyyy-MM-dd') insp_date,
			   ret_stat,
			   insp_num,
			   emp_id,
			   res_stat
		
		from etc_data
		order by ret_stat
	</select>
	
	<!-- <select id="returnList" resultType="ReturnInspVO">
		select r.* from ret_prod r
		LEFT OUTER JOIN pro_ship s ON r.cp_ship_id = s.cp_ship_id
		LEFT OUTER JOIN prod_lot l ON s.cp_ship_id = l.cp_lot_id
		LEFT OUTER JOIN qua_com q ON r.insp_num = q.insp_num
		LEFT OUTER JOIN qua_details d ON q.insp_num = d.insp_num
	</select> -->
	
	
	
	
	
	<!-- 반품 검사 번호 자동 등록 -->
	<select id="qrInspNum" resultType="String">
		select get_qur_num from dual
	</select>
	
	<!-- 반품 검사 등록 시 검사 공통 insert -->
	<insert id="isnertReturnCom" parameterType="ReturnInspVO">
		INSERT INTO qua_com (insp_num, 
						     insp_std_id, 
						     insp_item_id, 
						     insp_type, 
						     insp_date, 
						     emp_id, 
						     insp_qt, 
						     nsuit_qt, 
						     suit_qt, 
						     qua_com_note) 
    				values (#{inspNum}, 
    				        #{retId}, 
    				        #{cpId}, 
    				        'INSP-D', 
    				        sysdate, 
    				        #{empId},
    				        #{retQt},
    				        #{nsuitQt}, 
    				        #{suitQt}, 
    				        #{note})
	</insert>
	
	<!-- 반품 검사 등록 시 검사 상세 insert -->
  	<insert id="insertReturnDet" parameterType="ReturnInspVO">
		INSERT INTO qua_details (det_insp_num, insp_num, insp_id, res_val, res_stat)
		values (#{detInspNum}, #{inspNum}, #{inspId}, #{resVal}, #{resStat})
	</insert>  
	
	<!-- 반품 검사 등록시 반품 테이블 업데이트 -->
	<update id="updateReturn" parameterType="ReturnInspVO">
		 update ret_prod
		    set 
		        ret_stat=#{retStat},
		        insp_num=#{inspNum}
	      where ret_id=#{retId}
	</update> 
	
		<!-- 완제품 출고, 반품 수정 공통 -->
	<update id="modReturnCom" parameterType="ReturnInspVO">
		update qua_com
		  set  suit_qt       = #{suitQt},
			   nsuit_qt      =  #{nsuitQt}
		 where
		        insp_num      = #{inspNum}
 
	</update>
	
	<!-- 완제품 출고, 반품 수정 상세 -->
 	<update id="modReturnDet" parameterType="ReturnInspVO">
		update qua_details
		   set	res_val       = #{suitQt},
		   	    res_stat      = #{nsuitQt}
		 where
		        insp_num      = #{inspNum}
 
	</update>

</mapper>