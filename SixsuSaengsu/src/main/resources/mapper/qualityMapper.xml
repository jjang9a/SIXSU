<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="co.sixsu.app.quality.mapper.QualityMapper">

	<!-- 장가애 -->
	
	<!-- 검색용 -->
	<sql id="criteria">
		<trim prefix="and (" suffix=")" prefixOverrides="and">
			<foreach collection="typeArr" item="type">
				<trim prefix=" and ">
						<if test="type == 'I'.toString() ">
							insp_num like '%'||#{inspNum}||'%'
						</if>
						<if test="type == 'P'.toString()">
							insp_item_id like '%'||#{insp_item_id}||'%'
						</if>
						<if test="type == 'E'.toString()">
							emp_id like like '%'||#{empId}||'%'
						</if>
						<if test="type == 'D'.toString()">
							insp_date between to_date(#{inspDate}, 'YYYY-MM-DD') and
							to_date(#{inspDate2}|| ' 23:59:59', 'YYYY-MM-DD HH24:MI:SS')
						</if>
				</trim>
			</foreach>
		</trim>
	</sql>
		
	<select id="searchInsp" resultType="QuaVO">
		select q.insp_num, q.insp_item_id, to_char(insp_date, 'yyyy/MM/dd') insp_date, insp_qt, suit_qt, nsuit_qt ,q.insp_std_id, get_emp_name(emp_id) emp_name, get_com_name(insp_type) insp_exp, NVL(NVL(c.cp_name, s.sp_name), m.mat_name) mat_name
		from qua_com q
		left outer join complete_prod c on q.insp_item_id = c.cp_id
		left outer join semi_prod s on q.insp_item_id = s.sp_id
		left outer join material m on q.insp_item_id = m.mat_id  
		where insp_type = #{inspType}
      <include refid="criteria"></include>
      	order by insp_num desc
	</select>
	
	<select id="resultInspList" resultType="QuaVO">
		select q.insp_num, q.insp_item_id, to_char(insp_date, 'yyyy/MM/dd') insp_date, insp_qt, suit_qt, nsuit_qt ,q.insp_std_id, get_emp_name(emp_id) emp_name, get_com_name(insp_type) insp_exp, NVL(NVL(c.cp_name, s.sp_name), m.mat_name) mat_name
		from qua_com q
		left outer join complete_prod c on q.insp_item_id = c.cp_id
		left outer join semi_prod s on q.insp_item_id = s.sp_id
		left outer join material m on q.insp_item_id = m.mat_id  
		where insp_date between TRUNC(sysdate) - (INTERVAL '14' DAY) and sysdate
		order by insp_num desc
	</select>

	<!-- 원천수 자재 리스트 출력 -->
	<select id="getWater" resultType="QuaVO">
		select prcs_pfmc_id insp_std_id, pd_id insp_item_id, pd_name mat_name, good_qt insp_qt, wk_end insp_date
		from PROCESS_PERFORMANCE
		left outer join qua_com on insp_item_id = pd_id
		where pd_id = 'M021'
		and insp_num IS NULL
	</select>
	
	<!-- 검사 상세 조회 -->
	<select id="getDetail" resultType="QuaVO">
		SELECT D.*, L.INSP_NAME, STD_VAL
		FROM QUA_DETAILS D
		JOIN QUA_INSP_LIST L ON D.INSP_ID = L.INSP_ID
		WHERE INSP_NUM = #{inspNum}
		order by det_insp_num
	</select>
	
	<!-- 조민경 -->

	<!-- 자재 입고 검사 등록 리스트 -->
	<select id="proRecList" resultType="QuaVO">
		select r.mat_req_id,
		       b.bus_name, 
		       r.mat_id, 
		       m.mat_name, 
		       r.mat_req_qt
		       
		  from mat_req r 
		  left join	material m
		    on r.mat_id = m.mat_id
		  left join business b
		    on r.bus_id = b.bus_id
		    
		 where r.mat_req_stat='A'
		   and mat_req_qt>0
		   
		order by mat_req_id
	</select>


	<!-- 자재 입고 검사 대기 리스트 -->
	<select id="prInspList" resultType="QuaVO">
		 select
		        q.insp_std_id,
		        q.insp_num,
				b.bus_name, 
				r.mat_id, 
				m.mat_name,
				r.mat_req_qt, 
				q.insp_qt
				
		   from qua_com q 
		   join mat_req r 
		     on	q.insp_std_id = r.mat_req_id
		   join material m
		     on r.mat_id = m.mat_id
		   left join business b
		     on r.bus_id = b.bus_id
		     
		   where r.mat_req_stat='B'
		   
		order by insp_std_id
	</select>


	<!-- 입고 검사 등록 프로시저 -->
	<select id="insertPro" statementType="CALLABLE"
		parameterType="QuaVO">
		{CALL insert_pro(
			#{matReqId},
			<!-- #{inspQt, mode=IN, jdbcType=VARCHAR}, -->
			#{result, mode=INOUT, jdbcType=VARCHAR,	javaType=String}
		)}	
	</select>


	<!-- 검사 항목 리스트 -->
<!-- 	<select id="inspItem" resultType="QuaVO">
		select * 
		  from qua_insp_list

		 where insp_item_id=#{inspItemId}
		 
	</select> -->
	
	<!-- 검사 항목 리스트 -->
	<select id="inspItem" resultType="QuaVO">
  	select *
  	from qua_insp_list
  <where>
    <choose>
      <!-- SP001인 경우 -->
      <when test="inspItemId.equals('SP001')">
        and insp_item_id = 'SP001'
      </when>
      <!-- SP002 ~ SP013인 경우 -->
      <when test="inspItemId.startsWith('SP')">
        and insp_item_id = 'PRO999'
      </when>
      <!-- 그 외의 경우 -->
      <otherwise>
        and insp_item_id = #{inspItemId}
      </otherwise>
    </choose>
  </where>
</select>

	<!-- 수정 버튼 클릭 시 검사 항목 불러오기 -->
	<select id="modInspItem" resultType="QuaVO">
		select d.insp_num,
			   d.det_insp_num,
		       d.insp_id, 
		       d.res_val, 
		       l.insp_name, 
		       l.insp_exp, 
		       l.std_val,
		       q.insp_qt,
		       q.suit_qt, 
		       d.res_stat
		  
		  from qua_details d
		  join qua_com q 
		    on d.insp_num = q.insp_num
		  join qua_insp_list l 
		    on d.insp_id = l.insp_id
		
		where d.insp_num = #{inspNum}
		
		
		
		
	</select>

	<!-- 입고 검사 상세 결과 등록 -->
	<insert id="insertQuaDet" parameterType="QuaVO"> 
		insert into
		qua_details(det_insp_num,
		            insp_num, 
		            insp_id, 
		            res_val, 
		            res_stat) 
		     values(#{detInspNum}, 
		            #{inspNum},
		            #{inspId}, 
		            #{nsuitQt}, 
		            #{resStat})
	</insert>

	<!-- 입고 검사 상세 결과 수정 -->
	<update id="updateQd" parameterType="QudVO">
		update qua_details set
		       res_val = #{nsuitQt}
		 where det_insp_num = #{detInspNum}
	</update>
	
	<!-- 입고 검사 공통 결과 수정 -->
	<update id="updateQc" parameterType="QuaVO">
		update qua_com 
		   set
			    suit_qt    = (#{inspQt}-#{totNsuitQt}),
				nsuit_qt   = #{totNsuitQt}
		where
			    insp_num   = #{inspNum}
			
	</update>



	<!-- 검사 결과 등록 시 검사 공통 업데이트 -->
	<update id="qComUpdate" parameterType="QuaVO">
		<!-- update qua_com set insp_type='자재 입고 검사', insp_date=sysdate, emp_id=#{empId}, 
			suit_qt=insp_qt-#{nsuitQt}, nsuit_qt=#{nsuitQt} where insp_num=#{inspNum} -->
		update   qua_com
		   set
				insp_num      = #{inspNum},
				insp_item_id  = #{inspItemId},
				insp_qt       = #{inspQt},
				insp_date     = sysdate,
				emp_id        = #{empId},
				suit_qt       = (#{inspQt}-#{totNsuitQt}),
				nsuit_qt      = #{totNsuitQt}
		where
		        insp_num=#{inspNum}


	</update>

	<!-- 입고 검사 결과 등록 시 자재 발주 업데이트 -->
	<update id="mUpdate" parameterType="QuaVO">
		 update mat_req 
		 set
		     mat_req_stat=#{matReqStat}
   	   where
		     mat_req_id=#{inspStdId}
	</update>


	<!-- 입고 검사 완료 리스트 -->
	<select id="afterReqList" resultType="QuaVO">
		SELECT q.insp_num,
			   q.insp_std_id, 
			   m.mat_name,
			   r.mat_id, 
			   q.insp_qt, 
			   q.nsuit_qt, 
			   e.emp_id,
			   b.bus_id,
			   TO_CHAR(q.insp_date, 'YYYY-MM-DD') AS insp_date
		  FROM qua_com q
		  JOIN mat_req r 
		    ON q.insp_std_id = r.mat_req_id
	LEFT JOIN employee e
		    ON
		       q.emp_id = e.emp_id
	      JOIN material m 
	        ON r.mat_id = m.mat_id
	 LEFT JOIN business b
		    on r.bus_id = b.bus_id
		
		 WHERE r.mat_req_stat='C'
		 <if test="inspDate == null">
  		 AND TRUNC(q.insp_date) >= TRUNC(SYSDATE) - 14
		 </if>
		 <if test="inspDate != null">
		  AND TRUNC(q.insp_date) = to_date(#{inspDate},'yyyy-MM-dd')
		 </if>
		 <if test="matId != null">
		  AND matId = #{matId}		 
		 </if>
		 <if test="empId != null">
		  AND empId = #{empId}
		 </if>
		 
		 order by q.insp_date desc

	</select>

	<!-- 입고 검사 완료 단건 삭제 -->
	<delete id="delReqInsp" parameterType="String">
		delete from qua_com where
		insp_num = #{inspNum}
	</delete>

	<!-- 공정 검사 등록 리스트 -->
	<select id="bpAddList" resultType="PrdInspVO">
		 select  p.prcs_pfmc_id, 
		         p.wk_deta_id, 
		         p.pd_id, 
		         p.pd_name, 
		         p.deta_qt, 
		         p.wk_end, 
		         q.insp_num,
		         b.proc_id,
		         r.proc_name
		   from  process_performance p 
LEFT OUTER JOIN  qua_com q 
             ON  p.PRCS_PFMC_ID = q.INSP_STD_ID
LEFT OUTER JOIN  work_bom b
		     ON  p.wk_deta_id = b.wk_deta_id
	  LEFT JOIN  process r
	         ON  b.proc_id = r.proc_id
          WHERE  q.INSP_NUM IS NULL
       ORDER BY  p.wk_end
	</select>

	<!-- 공정검사 전 검사 번호 자동 등록 -->
	<select id="pdInspNum" resultType="String">
		select get_qpd_num from dual
	</select>

	<!-- 공정 검사 (대기) 등록 -->
	<insert id="bpdAdd" parameterType="PrdInspVO">
		insert into qua_com
		(insp_num,
		insp_item_id, insp_type, insp_qt, insp_std_id)
		values
		(#{inspNum},
		#{pdId}, '공정검사', #{detaQt}, #{prcsPfmcId})
	</insert>

	<!-- 공정 검사 대기 리스트 -->
	<select id="prwList" resultType="PrdInspVO">
		 select  p.prcs_pfmc_id, 
		         p.wk_deta_id, 
		         p.pd_id, 
		         p.pd_name, 
		         p.deta_qt, 
		         p.good_qt,
		         p.dmat_qt,
		         to_char(p.wk_end, 'yyyy-MM-dd') wk_end, 
		         q.insp_num,
		         q.insp_date,
		         b.proc_id,
		         r.proc_name
		   from  process_performance p 
LEFT OUTER JOIN  qua_com q 
             ON  p.PRCS_PFMC_ID = q.INSP_STD_ID
LEFT OUTER JOIN  work_bom b
		     ON  p.wk_deta_id = b.wk_deta_id
	  LEFT JOIN  process r
	         ON  b.proc_id = r.proc_id
          WHERE  q.INSP_NUM IS NOT NULL
            AND  q.INSP_DATE IS NULL
       ORDER BY  p.wk_end
	</select>
	
	<!-- 공정 검사 완료 리스트 -->
		<select id="prdComList" resultType="PrdInspVO">
		 select  p.prcs_pfmc_id, 
		         p.wk_deta_id, 
		         p.pd_id, 
		         p.pd_name, 
		         p.deta_qt, 
		         p.good_qt,
		         p.dmat_qt,
		         q.insp_num,
		         to_char(p.wk_end, 'yyyy-MM-dd') wk_end,
		         b.proc_id,
		         r.proc_name,
                 q.emp_id
		   from  process_performance p 
LEFT OUTER JOIN  qua_com q 
             ON  p.PRCS_PFMC_ID = q.INSP_STD_ID
LEFT OUTER JOIN  work_bom b
		     ON  p.wk_deta_id = b.wk_deta_id
	  LEFT JOIN  process r
	         ON  b.proc_id = r.proc_id
          WHERE  q.INSP_NUM IS NOT NULL
            AND  q.INSP_DATE IS NOT NULL
       ORDER BY  q.insp_num
	</select>
	
	<!-- 출고 검사 번호 자동 등록 -->
  	<select id="psInspNum" resultType="String">
		select get_qps_num from dual
	</select> 
	
	<!-- 출고 검사 결과 등록 시 검사 공통 등록 -->
  	<insert id="insertShipCom" parameterType="ShipInspVO">
		INSERT INTO qua_com (insp_num, insp_std_id, insp_item_id, insp_type, insp_date, emp_id, insp_qt, nsuit_qt, suit_qt, qua_com_note) 
    	values (#{inspNum}, #{cpShipId}, #{cpId}, #{inspType}, sysdate, #{empId},#{cpShipQt},  #{nsuitQt}, #{suitQt}, #{note})
	</insert>  
	
	<!-- 출고 검사 결과 등록시 검사 세부 등록 -->
  	<insert id="insertShipDet" parameterType="ShipInspVO">
		INSERT INTO qua_details (det_insp_num, insp_num, insp_id, res_val, res_stat)
		values (#{detInspNum}, #{inspNum}, #{inspId}, #{resVal}, #{resStat})
	</insert>  
	
	<!-- 출고 검사 결과 등록시 update -->
 	 <update id="updateShip" parameterType="ShipInspVO">
		 update pro_ship
		    set 
		        cp_ship_stat=#{cpShipStat},
		        insp_num=#{inspNum}
	      where cp_ship_id=#{cpShipId}
	</update>  

	<!-- 완제품 출고 관리 리스트 -->
 	<select id="shInspList" resultType="ShipInspVO">
		select s.cp_ship_id, s.ord_det_id, s.cp_lot_id, p.cp_lot_id, c.cp_name,
		p.cp_id, s.cp_ship_qt, s.cp_ship_stat, d.res_stat,
		to_char(s.cp_ship_req_date, 'yyyy-MM-dd') cp_ship_req_date, to_char(q.insp_date, 'yyyy-MM-dd') insp_date
		from
		pro_ship s left join qua_com q
		on s.cp_ship_id = q.insp_std_id
		left join prod_lot p
		on s.cp_lot_id = p.cp_lot_id
		left join complete_prod c
		on p.cp_id=c.cp_id
        left join qua_details d
        on q.insp_num = d.insp_num
		order by cp_ship_stat desc, cp_ship_id
		
	</select> 
	
	<!-- 완제품 출고 수정 공통 -->
	<update id="modShipCom" parameterType="ShipInspVO">
		update qua_com
		  set  suit_qt       = #{suitQt},
			   nsuit_qt      =  #{nsuitQt}
		 where
		        insp_num      = #{inspNum}
 
	</update>
	
	<!-- 완제품 출고 수정 상세 -->
	<update id="modShipDet" parameterType="ShipInspVO">
		update qua_details
		   set	res_val       = #{cpShipQt},
		   	    res_stat      = #{resStat}
		 where
		        insp_num      = #{inspNum}
 
	</update>


</mapper>