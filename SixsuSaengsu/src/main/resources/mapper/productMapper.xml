<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="co.sixsu.app.basic.mapper.ProductMapper">

<!-- 반제품 입고관리 시작 -->
<select id="readySpList" resultType="ReceiveVO">
	SELECT P. PRCS_PFMC_ID, P.PD_ID SP_ID, P.PD_NAME SP_NAME, S.SP_SIZE, P.WK_END, P.GOOD_QT, S.SP_LOT
	FROM PROCESS_PERFORMANCE P
	JOIN WORK_BOM B ON B.WK_BOM_ID = P.WK_BOM_ID
	JOIN SEMI_PROD S ON P.PD_ID = S.SP_ID
	WHERE SUBSTR(P.PD_ID, 1, 2) = 'SP'
	AND SET_PFMC(P.PRCS_PFMC_ID) > ( SELECT NVL(MAX(SET_PFMC(PRCS_PFMC_ID)),0)
	                                                        FROM SP_REC)
	AND B.FLOW_NUM IN( SELECT MAX(FLOW_NUM)
	                    FROM WORK_BOM
	                    GROUP BY WK_DETA_ID)
    AND P.GOOD_QT != 0
	ORDER BY P.PD_ID,P.WK_END
</select>

<select id="procSpLotInfo" parameterType="ReceiveVO" statementType="CALLABLE">
	{CALL proc_sp_lot_info(
            #{spId, mode=IN, jdbcType=VARCHAR},
            #{spLotId, mode=OUT, jdbcType=VARCHAR},
            #{spQt, mode=OUT, jdbcType=INTEGER}
        )
    }
</select>

<select id="getSpLotId" parameterType="String" resultType="String">
	select GET_SP_LOT_ID(#{spId}) sp_lot_id
	from dual
</select>

<insert id="insertSpLot" parameterType="ReceiveVO">
	INSERT INTO sp_lot VALUES (#{spLotId}, #{spId}, #{spQt}, 'N', #{spLotQtCk})
</insert>

<insert id="insertSpRec" parameterType="ReceiveVO">
	<selectKey resultType="ReceiveVO" keyProperty="spRecId,spRecDate"  order="BEFORE" >
		select get_sp_rec_id sp_rec_id, to_char(sysdate, 'yyyy/MM/dd') sp_rec_date
		from dual
	</selectKey>
	 
	INSERT INTO sp_rec VALUES (#{spRecId}, #{prcsPfmcId}, #{spId}, '정상입고', to_date(#{spRecDate}, 'yyyy/MM/dd'), #{spRecQt}, null, #{empId}, #{spLotId})
</insert>

<update id="updateSpLot" parameterType="ReceiveVO">
	UPDATE sp_lot
	SET sp_qt=#{spQt}, sp_lot_qt_ck=#{spLotQtCk}
	WHERE sp_lot_id=#{spLotId}
</update>

<select id="spRecList" resultType="ReceiveVO">
	select r.sp_rec_id, r.prcs_pfmc_id, r.sp_id, r.sp_rec_type, to_char(r.sp_rec_date, 'yyyy-MM-dd') sp_rec_date, e.emp_name, r.sp_lot_id, s.sp_name, r.sp_rec_qt
	from sp_rec r join semi_prod s 
	on r.sp_id = s.sp_id
	LEFT OUTER join employee e
	on r.emp_id = e.emp_id
	order by sp_rec_date desc
</select>
<!-- 반제품 입고관리 끝 -->

<!-- 완제품 입고관리 시작 -->
<select id="readyCpList" resultType="ReceiveVO">
    SELECT P. PRCS_PFMC_ID, P.PD_ID CP_ID, P.PD_NAME CP_NAME, get_com_name(S.CP_SIZE) sp_size, P.WK_END, P.GOOD_QT, S.CP_LOT
	FROM PROCESS_PERFORMANCE P
	JOIN WORK_BOM B ON B.WK_BOM_ID = P.WK_BOM_ID
	JOIN COMPLETE_PROD S ON P.PD_ID = S.CP_ID
	WHERE SUBSTR(P.PD_ID, 1, 2) = 'CP'
	AND SET_PFMC(P.PRCS_PFMC_ID) > ( SELECT NVL(MAX(SET_PFMC(PRCS_PFMC_ID)),0)
	                                                        FROM PROD_REV)
	AND B.FLOW_NUM IN( SELECT MAX(FLOW_NUM)
	                    FROM WORK_BOM
	                    GROUP BY WK_DETA_ID)
    AND P.GOOD_QT != 0
	ORDER BY P.PD_ID,P.WK_END
</select>

<select id="cpRecList" resultType="ReceiveVO">
    select r.cp_rec_id, r.prcs_pfmc_id, l.cp_id, get_com_name(r.cp_rec_tp) cp_rec_tp , to_char(r.cp_rec_date, 'yyyy-MM-dd') cp_rec_date, get_emp_name(r.emp_id) emp_name, r.cp_lot_id, s.cp_name, r.cp_rec_qt
	from prod_rev r join prod_lot l on r.cp_lot_id = l.cp_lot_id
	join complete_prod s 
	on l.cp_id = s.cp_id
    order by cp_rec_date desc
</select>

<select id="procCpLotInfo" parameterType="ReceiveVO" statementType="CALLABLE">
	{CALL proc_cp_lot_info(
            #{cpId, mode=IN, jdbcType=VARCHAR},
            #{cpLotId, mode=OUT, jdbcType=VARCHAR},
            #{cpLotQt, mode=OUT, jdbcType=INTEGER}
        )
    }
</select>

<select id="getCpLotId" parameterType="String" resultType="String">
	select GET_CP_LOT_ID(#{cpId})
	from dual
</select>

<insert id="insertCpLot" parameterType="ReceiveVO">
	INSERT INTO prod_lot VALUES (#{cpLotId}, #{cpId}, #{cpLotQt}, #{cpLotQtCk}, '0')
</insert>

<insert id="insertCpRec" parameterType="ReceiveVO">
	<selectKey resultType="ReceiveVO" keyProperty="cpRecId,cpRecDate"  order="BEFORE" >
		select get_prod_rec_num() cp_rec_id, to_char(sysdate, 'yyyy/MM/dd') cp_rec_date
		from dual
	</selectKey>
	
	INSERT INTO prod_rev VALUES (#{cpRecId}, 'CPF', #{prcsPfmcId}, #{empId}, to_date(#{cpRecDate},'yyyy/MM/dd'), #{cpRecQt}, #{cpLotId})
</insert>

<update id="updateCpLot" parameterType="ReceiveVO">
	UPDATE prod_lot
	SET cp_lot_qt=#{cpLotQt}, cp_lot_qt_ck=#{cpLotQtCk}
	WHERE cp_lot_id=#{cpLotId}
</update>
<!-- 완제품 입고관리 종료 -->

<!-- 공정실적 조회 시작 -->
<select id="performanceList" resultType="PfmcVO">
	select prcs_pfmc_id, r.proc_name, wk_deta_id, p.pd_id, pd_name, equ_code, to_char(wk_start, 'yyyy-MM-dd hh24:mi') wk_start, to_char(wk_end, 'yyyy/MM/dd hh24:mi') wk_end, deta_qt, dmat_qt, good_qt, nvl(nvl(c.cp_unit , s.sp_unit), m.mat_unit) pd_unit, emp_name
	from PROCESS_PERFORMANCE p
    natural join work_bom b
    left outer join complete_prod c on p.pd_id = c.cp_id
    left outer join semi_prod s on p.pd_id = s.sp_id
    left outer join material m on p.pd_id = m.mat_id
    left outer join employee e on p.emp_id = e.emp_id
    left outer join process r on b.proc_id = r.proc_id
    order by prcs_pfmc_id desc
</select>

<sql id="criteria">
	<where>
		<if test="pdId != null and pdId != ''.toString()">
			pd_id = #{pdId}
		</if>
		<if test="pdType != null and pdType != ''.toString()">
			or ( substr(pd_id, 1, 1) = #{pdType} )
		</if>
		<if test="procType != null and procType != ''.toString()">
			or ( wk_bom_id IN ( select wk_bom_id
                            from work_bom b
                            join process p on b.proc_id = p.proc_id
                            where proc_type = #{procType} ) )
		</if>
		<if test="wkStart != null and wkStart != ''.toString() and wkEnd != null and wkEnd != ''.toString()">
			or ( wk_start between to_date(#{wkStart}, 'YYYY-MM-DD') and
							to_date(#{wkEnd}|| ' 23:59:59', 'YYYY-MM-DD HH24:MI:SS') )
		</if>
		<if test="prcsPfmcId != null and prcsPfmcId != ''.toString()">
			or ( prcs_pfmc_id like '%'||#{prcsPfmcId}||'%' )
		</if>
	</where>
</sql>

<select id="searchPerformance" resultType="PfmcVO">
	select prcs_pfmc_id, r.proc_name, wk_deta_id, p.pd_id, pd_name, equ_code, to_char(wk_start, 'yyyy-MM-dd') wk_start, to_char(wk_end, 'yyyy-MM-dd') wk_end, deta_qt, dmat_qt, good_qt, nvl(nvl(c.cp_unit , s.sp_unit), m.mat_unit) pd_unit, emp_name
	from PROCESS_PERFORMANCE p
    natural join work_bom b
    left outer join complete_prod c on p.pd_id = c.cp_id
    left outer join semi_prod s on p.pd_id = s.sp_id
    left outer join material m on p.pd_id = m.mat_id
    left outer join employee e on p.emp_id = e.emp_id
    left outer join process r on b.proc_id = r.proc_id
    <include refid="criteria"></include>
    order by prcs_pfmc_id desc
</select>
<!-- 공정실적 조회 종료 -->

<!-- 품질겅사 목록 관리 시작 -->
<select id="getInspList" resultType="QilVO">
	SELECT * FROM QUA_INSP_LIST
</select>

<insert id="addInsp" parameterType="QilVO">
	<selectKey keyProperty="inspId" resultType="String" order="BEFORE">
		SELECT insp_list_seq.nextval
		FROM dual
	</selectKey>
	INSERT INTO QUA_INSP_LIST VALUES ( #{inspId}, #{inspSep}, #{inspName}, #{inspExp}, #{stdVal}, #{inspItemId}, null )
</insert>

<update id="updateInsp" parameterType="QilVO">
	UPDATE QUA_INSP_LIST
	SET insp_sep = #{inspSep}, insp_name = #{inspName}, insp_exp = #{inspExp}, std_val = #{stdVal}, insp_item_id = #{inspItemId}
	WHERE insp_id = #{inspId}
</update>
<!-- 품질겅사 목록 관리 종료 -->

<!-- 반제품 입고 조회 시작 -->
<sql id="spResSql">
	<where>
		<if test="spId != null and spId != ''.toString()">
			r.sp_id = #{spId}
		</if>
		<if test="spRecDate != null and spRecDate != ''.toString() and spRecDate2 != null and spRecDate2 != ''.toString()">
			and ( sp_rec_date between to_date(#{spRecDate}, 'YYYY-MM-DD') and
							to_date(#{spRecDate2}|| ' 23:59:59', 'YYYY-MM-DD HH24:MI:SS') )
		</if>
	</where>
</sql>
<select id="spRecSearch" resultType="ReceiveVO">
	select r.sp_rec_id, r.prcs_pfmc_id, r.sp_id, r.sp_rec_type, to_char(r.sp_rec_date, 'yyyy-MM-dd') sp_rec_date, get_emp_name(emp_id) emp_name, r.sp_lot_id, s.sp_name, r.sp_rec_qt
	from sp_rec r join semi_prod s 
	on r.sp_id = s.sp_id
	<include refid="spResSql"></include>
	order by sp_rec_date desc
</select>
<!-- 반제품 입고 조회 종료 -->

</mapper>