<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="co.sixsu.app.material.mapper.MaterialsMapper">

<!-- 자재 LOT조회 SQL 조건구문 -->
<sql id="criteria">
 	<where>
		 	<if test="matLotId != null and matLotId != ''.toString()">
		 		m.mat_lot_id like '%'|| upper(#{matLotId}) || '%'
		 	</if>
		 	<if test="matLotId == null and matLotId == ''.toString()">
		 	</if>
		 	<if test="matName != null and matName != ''.toString()">
		 		and l.mat_name like '%'|| upper(#{matName}) || '%'
		 	</if>
		 	<if test="matName == null and matName == ''.toString()">
		 	</if>
		 	<if test="matHoldStat != null and matHoldStat != ''.toString()">
		 		and m.mat_hold_stat = #{matHoldStat}
		 	</if>
		 	<if test="matHoldStat == null and matHoldStat == ''.toString()">
		 	</if>
		 	<if test= "sDate != ''.toString() and eDate != ''.toString()">
		 		and mat_rec_date between to_date(#{sDate}, 'yyyy-MM-dd') and to_date(#{eDate}||' 23:59:59' , 'yyyy-MM-dd HH24:MI:SS')
		 	</if>
		 	<if test= "sDate == ''.toString() and eDate == ''.toString()">
		 	</if> 
	</where>
</sql>



<!-- 자재입고조회 SQL조건 구문 -->
<sql id="criteria2">
 	<where>
 			<if test="matLotId != null and matLotId != ''.toString()">
		 		and c.mat_lot_id like '%'|| upper(#{matLotId}) || '%'
		 	</if>
		 	<if test="matLotId == null and matLotId == ''.toString()">
		 	</if>
		 	<if test="matName != null and matName != ''.toString()">
		 		and l.mat_name like '%'|| upper(#{matName}) || '%'
		 	</if>
		 	<if test="matName == null and matName == ''.toString()">
		 	</if>
		 	<if test="busName != null and busName != ''.toString()">
		 		and b.bus_name like '%'|| upper(#{busName}) || '%'
		 	</if>
		 	<if test="busName == null and busName == ''.toString()">
		 	</if>
		 	<if test="matRecType != null and matRecType != ''.toString()">
		 		and c.mat_rec_type = #{matRecType}
		 	</if>
		 	<if test="matRecType == null and matRecType == ''.toString()">
		 	</if>		 	
		 	<if test= "sDate != ''.toString() and eDate != ''.toString()">
		 		and c.mat_rec_date  between to_date(#{sDate}, 'yyyy-MM-dd') and to_date(#{eDate}||' 23:59:59' , 'yyyy-MM-dd HH24:MI:SS')
		 	</if>
		 	<if test= "sDate == ''.toString() and eDate == ''.toString()">
		 	</if>
	</where>
</sql> 

<!-- 자재출고조회 SQL 조건구문 -->
<sql id="criteria3">
 	<where>
		 	<if test="prcsPfmcId != null and prcsPfmcId != ''.toString()">
		 		s.prcs_pfmc_id = #{prcsPfmcId}
		 	</if>
		 	<if test="prcsPfmcId == null and prcsPfmcId == ''.toString()">
		 	</if>
		 	<if test="matLotId != null and matLotId != ''.toString()">
		 		and s.mat_lot_id = #{matLotId}
		 	</if>
		 	<if test="matLotId == null and matLotId == ''.toString()">
		 	</if>
		 	<if test="matName != null and matName != ''.toString()">
		 		and m.mat_name = #{matName}
		 	</if>
		 	<if test="matName == null and matName == ''.toString()">
		 	</if>
		 	<if test="matShipType != null and matShipType != ''.toString()">
		 		and s.mat_ship_type = #{matShipType}
		 	</if>
		 	<if test="matShipType == null and matShipType == ''.toString()">
		 	</if>		 	
		 	<if test= "sDate != ''.toString() and eDate != ''.toString()">
		 		and s.mat_ship_date  between to_date(#{sDate}, 'yyyy-MM-dd') and to_date(#{eDate}||' 23:59:59' , 'yyyy-MM-dd HH24:MI:SS')
		 	</if>
		 	<if test= "sDate == ''.toString() and eDate == ''.toString()">
		 	</if> 
	</where>
</sql>

<!-- 반제품출고조회 SQL 조건구문 -->
<sql id="criteria4">
 	<where>
		 	<if test="prcsPfmcId != null and prcsPfmcId != ''.toString()">
		 		s.prcs_pfmc_id = #{prcsPfmcId}
		 	</if>
		 	<if test="prcsPfmcId == null and prcsPfmcId == ''.toString()">
		 	</if>
		 	<if test="spLotId != null and spLotId != ''.toString()">
		 		and s.sp_lot_id = #{spLotId}
		 	</if>
		 	<if test="spLotId == null and spLotId == ''.toString()">
		 	</if>
		 	<if test="spName != null and spName != ''.toString()">
		 		and p.sp_name = #{spName}
		 	</if>
		 	<if test="spName == null and spName == ''.toString()">
		 	</if>
		 	<if test="spShipType != null and spShipType != ''.toString()">
		 		and s.sp_ship_type = #{spShipType}
		 	</if>
		 	<if test="spShipType == null and spShipType == ''.toString()">
		 	</if>		 	
		 	<if test= "sDate != ''.toString() and eDate != ''.toString()">
		 		and s.sp_ship_date  between to_date(#{sDate}, 'yyyy-MM-dd') and to_date(#{eDate}||' 23:59:59' , 'yyyy-MM-dd HH24:MI:SS')
		 	</if>
		 	<if test= "sDate == ''.toString() and eDate == ''.toString()">
		 	</if>
	</where>
</sql>

<!-- 반제품 LOT조회 SQL 조건구문 -->
<sql id="criteria5">
		 	<if test="spLotId != null and spLotId != ''.toString()">
		 		and l.sp_lot_id like '%'|| upper(#{spLotId}) || '%'
		 	</if>
		 	<if test="spLotId == null and spLotId == ''.toString()">
		 	</if>
		 	<if test="spName != null and spName != ''.toString()">
		 		and s.sp_name like '%'|| upper(#{spName}) || '%'
		 	</if>
		 	<if test="spName == null and spName == ''.toString()">
		 	</if>
		 	<if test="spHoldStat != null and spHoldStat != ''.toString()">
		 		and l.sp_hold_stat = #{spHoldStat}
		 	</if>
		 	<if test="spHoldStat == null and spHoldStat == ''.toString()">
		 	</if>
		 	<if test= "sDate != ''.toString() and eDate != ''.toString()">
		 		and c.sp_rec_date  between to_date(#{sDate}, 'yyyy-MM-dd') and to_date(#{eDate}||' 23:59:59' , 'yyyy-MM-dd HH24:MI:SS')
		 	</if>
		 	<if test= "sDate == ''.toString() and eDate == ''.toString()">
		 	</if>
</sql>

<!-- 발주 조회 조건 -->
<sql id="criteria6">
	<where>
			<if test="matReqId != null and matReqId != ''.toString()">
		 		m.mat_req_id like '%'|| upper(#{matReqId}) || '%'
		 	</if>
		 	<if test="matReqId == null and matReqId == ''.toString()">
		 	</if>
		 	<if test="busName != null and busName != ''.toString()">
		 		and b.bus_name like '%'|| upper(#{busName}) || '%'
		 	</if>
		 	<if test="busName == null and busName == ''.toString()">
		 	</if>
		 	<if test="matName != null and matName != ''.toString()">
		 		and t.mat_name like '%'|| upper(#{matName}) || '%'
		 	</if>
		 	<if test="matName == null and matName == ''.toString()">
		 	</if>
		 	<if test="matReqStat != null and matReqStat != ''.toString()">
		 		and m.mat_req_stat = #{matReqStat}
		 	</if>
		 	<if test="matReqStat == null and matReqStat == ''.toString()">
		 	</if>
		 	<if test= "matInSDate != ''.toString() and matInEDate != ''.toString()">
		 		and mat_req_date  between to_date(#{matInSDate}, 'yyyy-MM-dd') and to_date(#{matInEDate}||' 23:59:59' , 'yyyy-MM-dd HH24:MI:SS')
		 	</if>
		 	<if test= "matInSDate == ''.toString() and matInEDate == ''.toString()">
		 	</if>
		 	<if test= "matEndSDate != ''.toString() and matEndEDate != ''.toString()">
		 		and mat_end_date  between to_date(#{matEndSDate}, 'yyyy-MM-dd') and to_date(#{matEndEDate}||' 23:59:59' , 'yyyy-MM-dd HH24:MI:SS')
		 	</if>
		 	<if test= "matEndSDate == ''.toString() and matEndEDate == ''.toString()">
		 	</if>
	
	</where>
</sql>

	<!-- 발주리스트 -->
	<select id="getMatReqList" resultType="MatreqVO">
		select m.mat_req_id, 
		       m.bus_id, 
		       b.bus_name, 
		       m.mat_id, 
		       t.mat_name, 
		       t.mat_size, 
		       m.mat_req_qt, 
		       to_char(mat_req_date,'yyyy-mm-dd') as mat_req_date, 
		       m.mat_req_stat, 
		       to_char(mat_end_date,'yyyy-mm-dd') as mat_end_date, 
		       m.emp_id, 
		       e.emp_name
		
		  from mat_req m 
		  left join business b
		    on m.bus_id = b.bus_id
		  left join employee e
		    on m.emp_id = e.emp_id
		  left join material t
		    on m.mat_id = t.mat_id
		 order by TO_DATE(SUBSTR(mat_req_id, 4, 6), 'YYMMDD') desc, 
		          TO_NUMBER(SUBSTR(mat_req_id, INSTR(mat_req_id, '-') + 1)) desc
	</select>
	
	<!-- 발주 조회 -->
	<select id="getMatReqSearch" resultType="MatreqVO" parameterType="MatreqVO">
		select m.mat_req_id, 
		       m.bus_id, 
		       b.bus_name, 
		       m.mat_id, 
		       t.mat_name, 
		       t.mat_size, 
		       m.mat_req_qt, 
		       to_char(mat_req_date,'yyyy-mm-dd') as mat_req_date, 
		       m.mat_req_stat, 
		       to_char(mat_end_date,'yyyy-mm-dd') as mat_end_date, 
		       m.emp_id, 
		       e.emp_name
		
		  from mat_req m 
		  left join business b
		    on m.bus_id = b.bus_id
		  left join employee e
		    on m.emp_id = e.emp_id
		  left join material t
		    on m.mat_id = t.mat_id
 		<!-- 조건 -->
		<include refid="criteria6"></include>
		 order by TO_DATE(SUBSTR(mat_req_id, 4, 6), 'YYMMDD') desc, 
		          TO_NUMBER(SUBSTR(mat_req_id, INSTR(mat_req_id, '-') + 1)) desc
	</select>	
	
	<!-- 발주제거 -->
	<delete id="deleteMatReq" parameterType="MatreqVO">
		delete from mat_req 
		 where mat_req_id = #{matReqId}
	</delete>
	
	<!-- 발주등록 -->
	<insert id="insertMatReq" parameterType="MatreqVO">
		insert into mat_req (
		       mat_req_id, 
		       bus_id, 
		       mat_id, 
		       mat_req_qt,
		       mat_end_date, 
		       emp_id)
		values (get_mat_req_id(), 
		        #{busId}, 
		        #{matId}, 
		        #{matReqQt}, 
		        to_date(#{matEndDate},'yyyy-MM-dd'),
		        #{empId})
	</insert>
	
	<!-- 모달창 거래처 조회 -->
	<select id="matReqBusList" resultType='BusVO'>
		select * 
		from business
		where bus_type= 'BUY'
		and bus_stat = 'Y'
	</select>
	
	<!-- 자재 발주 수정 -->
  	<update id="updateMatReq" parameterType="MatreqVO">
	  	update mat_req
	  	set bus_id = #{busId} ,mat_id = #{matId}, mat_req_qt = #{matReqQt}, mat_end_date = to_date(#{matEndDate},'yyyy-MM-dd')
	  	where mat_req_id = #{matReqId}
  	</update>
  	
	<!-- 입고대기 목록 -->
	<select id="selectMatRecWaitList" resultType="MatrecWaitVO">
		select q.insp_num, m.mat_req_id, q.insp_item_id, t.mat_name, q.suit_qt, to_char(q.insp_date, 'yyyy-mm-dd') as insp_date, get_emp_name(q.emp_id) emp_name
		  from qua_com q 
		  left join mat_req m
		    on q.insp_std_id = m.mat_req_id
		  left join material t
		    on q.insp_item_id = t.mat_id
		 where m.mat_req_stat = 'C'
		 order by insp_date
	</select>
	
	<!-- 입고 목록-->
	<select id="selectMatRecList" resultType="MatrecVO" parameterType="MatrecVO">
		select c.mat_rec_id, 
	       c.mat_req_id, 
	       c.insp_num, 
	       to_char(u.insp_date, 'yyyy-MM-dd') as insp_date, 
	       c.mat_rec_qt, 
	       c.mat_rec_type, 
	       to_char(c.mat_rec_date, 'yyyy-MM-dd') as mat_rec_date, 
	       c.mat_rec_note, 
	       c.mat_lot_id,
	       l.mat_name, 
	       b.bus_name, 
	       GET_EMP_NAME(c.emp_id) as emp_name
		from mat_rec c 
		left join mat_req q
		 on c.mat_req_id = q.mat_req_id
		left join qua_com u
		 on c.insp_num = u.insp_num
		left join business b
		 on q.bus_id = b.bus_id 
		left join mat_lot t
		 on c.mat_lot_id = t.mat_lot_id 
		left join material l
		 on t.mat_id = l.mat_id
		order by c.mat_rec_date desc
	</select>
	
	<!-- 자재 입고 조회-->
	<select id="getMatRecSearch" resultType="MatrecVO" parameterType="MatrecVO">
		select c.mat_rec_id, 
	       c.mat_req_id, 
	       c.insp_num, 
	       to_char(u.insp_date, 'yyyy-MM-dd') as insp_date, 
	       c.mat_rec_qt, 
	       c.mat_rec_type, 
	       to_char(c.mat_rec_date, 'yyyy-MM-dd') as mat_rec_date, 
	       c.mat_rec_note, 
	       c.mat_lot_id,
	       l.mat_name, 
	       b.bus_name, 
	       GET_EMP_NAME(c.emp_id) as emp_name
		from mat_rec c 
		left join mat_req q
		 on c.mat_req_id = q.mat_req_id
		left join qua_com u
		 on c.insp_num = u.insp_num
		left join business b
		 on q.bus_id = b.bus_id 
		left join mat_lot t
		 on c.mat_lot_id = t.mat_lot_id 
		left join material l
		 on t.mat_id = l.mat_id
		<!-- 조건 -->
		<include refid="criteria2"></include>
		order by c.mat_rec_date desc
	</select>
	
	<!-- 입고등록 -->
	<insert id="insertMatRec" parameterType="MatrecVO">
    <![CDATA[
	    CALL IN_MAT_REC(
	      #{matReqId},
	      #{empId}
	    )
	    ]]>
  	</insert>
  	
  	<!-- 자재목록 -->
  	<select id="selectMatList" parameterType="MatVO" resultType="MatVO">
  		with lotsum as (select mat_id, sum(mat_qt) as mat_qt_sum from mat_lot group by mat_id)
		select m.*, l.mat_qt_sum 
		from material m 
		left join lotsum l 
		 on m.mat_id = l.mat_id
		where m.mat_stat = 'Y'
		<if test="matName != null and matName != ''.toString()">
			and m.mat_name like '%'|| upper(#{matName}) || '%'
		</if>
		<if test="matName == null and matName == ''.toString()">
		
		</if>
		order by m.mat_id
  	</select>
  	
	<!-- 입고삭제 프로시저 -->
	<insert id="delMatRec" parameterType="MatrecVO" statementType="CALLABLE">
    <![CDATA[
	    call  mat_rec_del(
	      #{matRecId, mode=IN, jdbcType=VARCHAR},
	      #{matLotId, mode=IN, jdbcType=VARCHAR},
	      #{outMessage, mode=OUT, jdbcType=VARCHAR}
	    )
	    
	    ]]>
  	</insert>
  	
  	<!-- 자재lot리스트 -->
  	<select id="mLotList" parameterType="MatLotVO" resultType="MatLotVO">
		select m.mat_lot_id, 
			   m.mat_id, 
			   l.mat_name, 
			   l.mat_size, 
			   m.mat_qt, 
			   m.mat_hold_stat, 
			   to_char(c.mat_rec_date,'yyyy-MM-dd') as mat_rec_date
		from mat_lot m 
		
		left join mat_rec c
		 on m.mat_rec_id = c.mat_rec_id
		
		left join material l
		 on m.mat_id = l.mat_id
		<!-- 조건 -->
		<include refid="criteria"></include>
		
		<!-- 로트역순으로 -->
		order by substr(mat_lot_id, 5,6) desc, TO_NUMBER(SUBSTR(mat_lot_id, INSTR(mat_lot_id, '-') + 1)) desc
		
  	</select>
	
	<!-- 자재 출고 리스트-->
	<select id="getMatShipList" resultType="MatShipVO" parameterType="MatShipVO">
		select s.prcs_pfmc_id, 
			   s.mat_lot_id, 
			   m.mat_name, 
			   s.mat_ship_type, 
			   to_char(s.mat_ship_date, 'yyyy-MM-dd') as mat_ship_date,
			   s.mat_ship_qt, 
			   s.mat_ship_note, 
			   e.emp_name
			   
		from mat_ship s 
		
		left join mat_lot l
		 on s.mat_lot_id = l.mat_lot_id
		
		left join material m
		 on l.mat_id = m.mat_id
		
		left join employee e
		 on s.emp_id = e.emp_id
		
		<!-- 조건 -->
		<include refid="criteria3"></include>		 
		order by s.mat_ship_date desc
	</select>
	
	<!-- 자재 재고조정 페이지 -->
	<select id="getMatAdjList" resultType="MatAdjVO" parameterType="String">
		select l.mat_lot_id, 
		       l.mat_id, 
		       m.mat_name, 
		       m.mat_size, 
		       l.mat_qt
		from mat_lot l 
		left join material m
		  on l.mat_id = m.mat_id
		where l.mat_hold_stat = 'N'
	 	<if test= "matLotId != ''.toString() and matLotId != ''.toString()">
	 		and l.mat_lot_id like '%'|| upper(#{matLotId}) || '%'
	 	</if>
	 	<if test= "matLotId == ''.toString() and matLotId == ''.toString()">
	 	</if> 		   
		order by l.mat_lot_id desc
	</select>
	
	<!-- 자재 조정입고 프로시저-->
	<insert id="matRecAdj" parameterType="MatAdjVO">
    <![CDATA[
	    call mat_adj_insert(
	      #{matLotId, mode=IN, jdbcType=VARCHAR},
	      #{matAdjQt, mode=IN, jdbcType=INTEGER},
	      #{empId, mode=IN, jdbcType=VARCHAR}
	    )
	    
	    ]]>
  	</insert>
  	
  	<!-- 자재 조정출고 프로시저-->
	<insert id="matShipAdj" parameterType="MatAdjVO" >
    <![CDATA[
	    call  mat_adj_del(
	      #{matLotId, mode=IN, jdbcType=VARCHAR},
	      #{matAdjQt, mode=IN, jdbcType=INTEGER},
	      #{empId, mode=IN, jdbcType=VARCHAR}
	    )
	    
	    ]]>
  	</insert>
  	
  	<!-- 반제품 재고조정 페이지 -->
  	<select id="getSpAdjList" resultType="SpAdjVO">
  		select l.sp_lot_id, 
  			   l.sp_id, 
  			   s.sp_name, 
  			   s.sp_size, 
  			   l.sp_qt
		  from sp_lot l 
		  left join semi_prod s
		    on l.sp_id = s.sp_id
		  where l.sp_hold_stat = 'N'
	 	<if test= "spLotId != ''.toString() and spLotId != ''.toString()">
	 		and l.sp_lot_id like '%'|| upper(#{spLotId}) || '%'
	 	</if>
	 	<if test= "spLotId == ''.toString() and spLotId == ''.toString()">
	 	</if> 			    
  	</select>
  	
  	<!-- 반제품 출고 리스트 -->
  	<select id="getSpShipList" resultType="SpShipVO" parameterType="SpShipVO">
  		select s.prcs_pfmc_id, 
  			   s.sp_lot_id, 
  			   p.sp_name, 
  			   s.sp_ship_type, 
  			   to_char(s.sp_ship_date, 'yyyy-MM-dd') as sp_ship_date, 
  			   s.sp_ship_qt, 
  			   s.sp_ship_note, 
  			   e.emp_name
		from sp_ship s 
		 
		left join sp_lot l
		 on s.sp_lot_id = l.sp_lot_id
		 
		left join semi_prod p
		 on l.sp_id = p.sp_id
		 
		left join employee e
		 on s.emp_id = e.emp_id
		 
		 <!-- 반제품 출고 조회 조건 -->
		<include refid="criteria4"></include>
		order by to_date(s.sp_ship_date, 'yyyy-MM-dd') desc
  	</select>
  	
  	<!-- 반제품 조정입고 프로시저 -->
  	<insert id="spRecAdj" parameterType="SpAdjVO">
    <![CDATA[
	    call  sp_adj_insert(
	      #{spLotId, mode=IN, jdbcType=VARCHAR},
	      #{spAdjQt, mode=IN, jdbcType=INTEGER},
	      #{empId}
	    )
	    
	    ]]>
  	</insert>
  	
  	<!-- 반제품 조정출고 프로시저-->
	<insert id="spShipAdj" parameterType="SpAdjVO">
    <![CDATA[
	    call  sp_adj_del(
	      #{spLotId, mode=IN, jdbcType=VARCHAR},
	      #{spAdjQt, mode=IN, jdbcType=INTEGER},
	      #{empId}
	    )
	    
	    ]]>
  	</insert>
  	
  	<!-- 불량자재 처리대기 리스트 -->
	<select id="getMatDmgWaitList" resultType="MatDmgVO">
		SELECT d.insp_num, to_char(c.insp_date, 'yyyy-MM-dd') as insp_date, m.mat_id, m.mat_name, m.mat_size, to_number(d.res_val) as res_val, get_emp_name(c.emp_id) as emp_name
		FROM qua_details d
		JOIN qua_com c 
		 ON d.insp_num = c.insp_num
		JOIN PROCESS_PERFORMANCE p 
		 ON c.insp_std_id=p.PRCS_PFMC_ID
		JOIN work_bom_mat b 
		 ON p.wk_bom_id = b.wk_bom_id
		JOIN material m 
		 ON b.mat_id = m.mat_id
		LEFT JOIN damaged_mat g 
		 ON c.insp_num = g.insp_num
		WHERE c.insp_type = 'INSP-B'
		 AND d.insp_id = ( SELECT insp_id
		                FROM QUA_INSP_LIST
		                WHERE insp_name = '자재불량')
		 AND g.insp_num is null
	</select>
	
	<!-- 불량자재 처리 리스트 -->
	<select id="getMatDmgList" resultType="MatDmgVO">
        select a.dmat_id, a.insp_num, a.dmat_stat, to_char(a.dmat_date, 'yyyy-MM-dd') as dmat_date, to_number(d.res_val) as res_val, a.dmat_note ,m.mat_id, m.mat_name, m.mat_size, get_emp_name(a.emp_id) as emp_name
		from damaged_mat a 
		left JOIN qua_details d
		 ON a.insp_num = d.insp_num
		left JOIN qua_com c 
		 ON d.insp_num = c.insp_num
		left JOIN PROCESS_PERFORMANCE p 
		 ON c.insp_std_id=p.PRCS_PFMC_ID
		left JOIN work_bom_mat b 
		 ON p.wk_bom_id = b.wk_bom_id
		left JOIN material m 
		 ON b.mat_id = m.mat_id
    	WHERE c.insp_type = 'INSP-B'
		 AND d.insp_id = (SELECT insp_id
		                  FROM QUA_INSP_LIST
		                  WHERE insp_name = '자재불량')
	</select>
	
	<!-- 자재 불량처리 -->
  	<insert id="insertMatDmg" parameterType="MatDmgVO">
		insert into damaged_mat (dmat_id, dmat_stat, emp_Id, insp_num)
		values (GET_MAT_DMG_ID(), #{dmatStat}, #{empId}, #{inspNum})
  	</insert>
	
	<!-- 반제품 리스트 -->
	<select id="getSpList" resultType="SpVO" parameterType="String">
		
		with splotsum as (select sp_id, sum(sp_qt) as sp_qt_sum from sp_lot group by sp_id)
		select p.*, s.sp_qt_sum from semi_prod p left join splotsum s on p.sp_id = s.sp_id
		where p.sp_stat = 'Y' 
		<if test="spName != null and spName != ''.toString()">
			and p.sp_name = #{spName}
		</if>
		<if test="spName == null and spName == ''.toString()">
		</if>
		order by p.sp_id
		
	</select>
	
	<!-- 반제품 LOT 리스트 -->
	<select id="getSpLotList" resultType="SpLotVO" parameterType="SpLotVO">
        select l.sp_lot_id, l.sp_id, s.sp_name, s.sp_size, l.sp_qt, l.sp_hold_stat, l.sp_lot_qt_ck, to_char(c.sp_rec_date, 'yyyy-MM-dd') sp_rec_date
		from sp_lot l left join semi_prod s
		on l.sp_id = s.sp_id
        left join sp_rec c
        on l.sp_lot_id = c.sp_lot_id
        where l.sp_lot_qt_ck = 'Y'
        <!-- 조회 조건 -->
        <include refid="criteria5"></include>	
        order by sp_rec_date desc
	</select>
	
</mapper>





